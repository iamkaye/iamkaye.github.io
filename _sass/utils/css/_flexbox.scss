// Flexbox base.

// Identifier if Tweener version should be included.
$include_tweener: true;
// The Tweener specific property/value names.
$flexbox_tweener: (
        flex: flexbox,
        inline-flex: inline-flexbox,
        nowrap: none,
        flex-start: start,
        flex-end: end,
        align-content: flex-line-pack,
        align-items: flex-align,
        align-self: flex-item-align,
        justify-content: flex-pack,
        order: flex-order,
    );

// The main flexbox generator.
// $declaration [map]  - map of property-value pair that will prefixed
// $tweener     [bool] - identifier if tweener version should be added
@mixin flexbox($declaration, $tweener: $include_tweener) {
    // Check if tweener is included.
    $prefixes: include_tweener($include_tweener);
    // Iterate through the specified prefixes.
    @each $prefix in $prefixes {
        // Iterate through the property-value pair declaration.
        @each $property, $value in $declaration {
            // Check if current prefix is for "ms" and resolve.
            @if $prefix == ms {
                $property: resolve_tweener($property);
                $value: resolve_tweener($value);
            }
            // Write the prefixed version.
            @if $property == display {
                display: prefix_it($value, get_prefix_value($prefix));
            }
            @else {
                @include prefix_prop($property, $value, get_prefix_value($prefix));
            }
        }
    }
}

// flex container
@mixin display_flex($display: flex) {
    @include flexbox((display: $display));
}

// flex-direction
@mixin flex_direction($direction) {
    @include flexbox((flex-direction: $direction));
}

// flex-wrap
@mixin flex_wrap($flex_wrap) {
    @include flexbox((flex-wrap: $flex_wrap));
}

// justify-content
@mixin justify_content($justify_content) {
    @include flexbox((justify-content: $justify_content));
}

// align-items
@mixin align_items($align_items) {
    @include flexbox((align-items: $align_items));
}

// align-content
@mixin align_content($align_content) {
    @include flexbox((align-content: $align_content));
}

// flex
@mixin flex($flex) {
    @include flexbox((flex: $flex));
}

// align-self
@mixin align_self($align_self) {
    @include flexbox((align-self: $align_self));
}

// order
@mixin order($order) {
    @include flexbox((order: $order));
}

// Resolver for tweener specific properties/values.
@function resolve_tweener($value) {
    // Check if property/value is tweener specific.
    @if map-has-key($flexbox_tweener, $value) {
        // Returns resolved property/value.
        @return map-get($flexbox_tweener, $value);
    }
    // Returns the original property/value.
    @return $value;
}

@function include_tweener($bool) {
    @if $bool {
        @return (ms, webkit, spec);
    }

    @return get_prefixes($property);
}